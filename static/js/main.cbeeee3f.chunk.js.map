{"version":3,"sources":["components/Answer.js","components/AnswersList.js","components/Chats.js","assets/img/no-profile.png","assets/img/spiderman.png","components/Chat.js","components/forms/TextInput.js","components/forms/FormDialog.js","dataset.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","createStyles","borderColor","color","fontWeight","marginBottom","backgroundColor","Answer","props","classes","Button","className","button","variant","onClick","select","content","nextId","AnswersList","answers","map","value","index","toString","height","padding","overflow","scrollBehavior","Chats","List","chats","id","chat","text","type","Chat","isQuestion","ListItem","ListItemAvatar","Avatar","alt","src","Spiderman","NoProfile","TextInput","TextField","fullWidth","label","margin","multiline","rows","onChange","FormDialog","inputName","event","setState","name","target","inputEmail","email","inputDescription","description","validateEmailFormat","test","validateRequiredInput","isBlank","i","length","submitForm","state","isValidEmail","alert","payload","fetch","method","body","JSON","stringify","then","handleClose","bind","Dialog","open","this","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","React","Component","defaultDataset","App","displayNextQuestion","nextQuestionId","push","dataset","question","currentId","selectAnswer","selectedAnswer","setTimeout","a","document","createElement","href","click","handleClickOpen","initAnswer","initAnswers","initChats","scrollArea","getElementById","scrollTop","scrollHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cbeeee3f.chunk.js","sourcesContent":["import React from \"react\"\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => (\n    createStyles({\n        \"button\": {\n            borderColor: \"#b30e0e\",\n            color: \"#b30e0e\",\n            fontWeight: 600,\n            marginBottom: \"8px\",\n            \"&:hover\": {\n                backgroundColor: \"#b30e0e\",\n                color: \"#fff\"\n            }\n        }\n    })\n))\n\nconst Answer = (props) => {\n    const classes = useStyles();\n\n    return (\n    <Button className={classes.button} variant=\"outlined\" onClick={() => props.select(props.content, props.nextId)}>\n        {props.content}\n    </Button>   \n    )\n\n}\n\nexport default Answer","import React from \"react\"\nimport Answer from \"./Answer\"\n\nconst AnswersList = (props) => {\n    return (\n        <div className=\"c-grid__answer\">\n            {props.answers.map((value, index) => {\n                return <Answer content={value.content} nextId={value.nextId} key={index.toString()} select={props.select} />\n            })}\n        </div>\n    )    \n}\n\nexport default AnswersList","import React from \"react\"\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport {Chat} from \"./index\"\n\nconst useStyles = makeStyles(() => (\n    createStyles({\n        \"chats\": {\n            height: 400,\n            padding: '0',\n            overflow: 'auto',\n            scrollBehavior: \"smooth\"\n        }\n    })\n));\n\nconst Chats = (props) => {\n    const classes = useStyles();\n    return (\n    <List className={classes.chats} id={\"scroll-area\"}>\n        {props.chats.map((chat, index) => {\n            return <Chat text={chat.text} type={chat.type} key={index.toString()} />\n        })}\n    </List>\n    )\n}\n\nexport default Chats","export default __webpack_public_path__ + \"static/media/no-profile.67b6df19.png\";","export default __webpack_public_path__ + \"static/media/spiderman.35504a80.png\";","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport NoProfile from \"../assets/img/no-profile.png\";\nimport Spiderman from \"../assets/img/spiderman.png\";\n\nconst Chat = (props) => {\n  // 左右どちらに詰めるか\n  const isQuestion = props.type === \"question\";\n  const classes = isQuestion ? \"p-chat__row\" : \"p-chat__reverse\";\n\n  return (\n    <ListItem className={classes}>\n      <ListItemAvatar>\n        {isQuestion ? (\n          <Avatar alt=\"icon\" src={Spiderman} />\n        ) : (\n          <Avatar alt=\"icon\" src={NoProfile} />\n        )}\n      </ListItemAvatar>\n      {isQuestion ? (\n      <div className=\"p-chat-left__bubble\">{props.text}</div>\n      ) : (\n        <div className=\"p-chat-right__bubble\">{props.text}</div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = (props) => {\n    return (\n        <TextField\n            fullWidth={true}\n            label={props.label}\n            margin={\"dense\"}\n            multiline={props.multiline}\n            rows={props.rows}\n            value={props.value}\n            type={props.type}\n            onChange={props.onChange}\n        />\n    )\n}\n\nexport default TextInput","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextInput from \"./TextInput\";\n\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      description: \"\",\n    };\n    this.inputName = this.inputName.bind(this);\n    this.inputEmail = this.inputEmail.bind(this);\n    this.inputDescription = this.inputDescription.bind(this);\n  }\n\n  inputName = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  inputEmail = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  inputDescription = (event) => {\n    this.setState({ description: event.target.value });\n  };\n\n  validateEmailFormat = (email) => {\n    const regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    return regex.test(email);\n  };\n\n  validateRequiredInput = (...args) => {\n    let isBlank = false;\n    for (let i = 0; i < args.length; i = (i + 1) | 0) {\n      if (args[i] === \"\") {\n        isBlank = true;\n      }\n    }\n    return isBlank;\n  };\n\n  submitForm = () => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const description = this.state.description;\n    const isBlank = this.validateRequiredInput(name, email, description);\n    const isValidEmail = this.validateEmailFormat(email);\n\n    if (isBlank) {\n      alert(\"必須入力欄が空白です。\");\n      return false;\n    } else if (!isValidEmail) {\n      alert(\"メールアドレスの書式が異なります。\");\n      return false;\n    } else {\n      const payload = {\n        text:\n          \"お問い合わせがありました\\n\" +\n          \"お名前: \" +\n          name +\n          \"\\n\" +\n          \"メールアドレス: \" +\n          email +\n          \"\\n\" +\n          \"【問い合わせ内容】\\n\" +\n          description,\n      };\n      // fetchメソッドでフォームの内容をSlackのIncoming Webhook URL に送信する\n      const WEBHOOK_URL = \"\"\n      fetch(WEBHOOK_URL, {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n      }).then(() => {\n        alert(\"送信完了しました。確認次第リプします🕷\");\n        this.setState({\n          name: \"\",\n          email: \"\",\n          description: \"\"\n        })\n        return this.props.handleClose();\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">お問い合わせフォーム</DialogTitle>\n        <DialogContent>\n          <TextInput\n            label={\"お名前(必須)\"}\n            multiline={false}\n            rows={1}\n            value={this.state.name}\n            type={`text`}\n            onChange={this.inputName}\n          />\n          <TextInput\n            label={\"メールアドレス(必須)\"}\n            multiline={false}\n            rows={1}\n            value={this.state.email}\n            type={`email`}\n            onChange={this.inputEmail}\n          />\n          <TextInput\n            label={\"お問い合わせ内容(必須)\"}\n            multiline={true}\n            rows={5}\n            value={this.state.description}\n            type={`text`}\n            onChange={this.inputDescription}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.handleClose} color=\"primary\">\n            キャンセル\n          </Button>\n          <Button onClick={this.submitForm} color=\"primary\" autoFocus>\n            送信する\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","const defaultDataset = {\n    \"init\": {\n        \"answers\": [\n            {\"content\": \"助けて！！\", \"nextId\": \"help\"},\n            {\"content\": \"おもしろいことないかな\", \"nextId\": \"consultant\"},\n            {\"content\": \"アベンジャーズに参加したい\", \"nextId\": \"community\"},\n            {\"content\": \"友達になりたい\", \"nextId\": \"friend\"}\n        ],\n        \"question\": \"親愛なる隣人、スパイダーマンだ🕷！用件はなんだい？\"\n    },\n    \"help\": {\n        \"answers\": [\n            {\"content\": \"追われてる\", \"nextId\": \"help_escape\"},\n            {\"content\": \"閉じ込められた\", \"nextId\": \"help_locked\"},\n            {\"content\": \"やられた...\", \"nextId\": \"help_damaged\"},\n            {\"content\": \"暇すぎる\", \"nextId\": \"help_bored\"}\n        ],\n        \"question\": \"どうしたんだい？\"\n    },\n    \"help_escape\": {\n        \"answers\": [\n            {\"content\": \"場所を教える\", \"nextId\": \"contact\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"すぐに行くよ！場所を教えて！！\"\n    },\n    \"help_locked\": {\n        \"answers\": [\n            {\"content\": \"場所を教える\", \"nextId\": \"contact\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"場所はわかるかい？何か手掛かりを求む！\"\n    },\n    \"help_damaged\": {\n        \"answers\": [\n            {\"content\": \"場所を教える\", \"nextId\": \"contact\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"しっかりしてくれ！！今すぐ向かうよ！！\"\n    },\n    \"help_bored\": {\n        \"answers\": [\n            {\"content\": \"YouTubeで動画を見る\", \"nextId\": \"https://www.youtube.com/watch?v=NPY5Iq-tCvk\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"そんな時はこれでもどう？\"\n    },\n    \"consultant\": {\n        \"answers\": [\n            {\"content\": \"YouTubeで動画を見る\", \"nextId\": \"https://www.youtube.com/watch?v=NPY5Iq-tCvk\"},\n            {\"content\": \"Marvelについて知りたい！\", \"nextId\": \"community\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"ゆっくりマイペースでいこうよ🕷\"\n    },\n    \"community\": {\n        \"answers\": [\n            {\"content\": \"どんな活動をしているの？\", \"nextId\": \"community_activity\"},\n            {\"content\": \"スパイダーマンのことをもっと知りたい！\", \"nextId\": \"https://marvel.disney.co.jp/character/spiderman.html\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"いいね！！一緒に世界を救おうぜ～！！\"\n    },\n    \"community_activity\": {\n        \"answers\": [\n            {\"content\": \"もっと詳細を知りたい\", \"nextId\": \"https://marvel.disney.co.jp/\"},\n            {\"content\": \"一緒にヒーローになる！！\", \"nextId\": \"contact\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"どんなことでも困ってる人がいたら助けるよ！\"\n    },\n    \"friend\": {\n        \"answers\": [\n            {\"content\": \"メッセージする\", \"nextId\": \"https://spidermannews.com/contact/\"},\n            {\"content\": \"用件に戻る\", \"nextId\": \"init\"}\n        ],\n        \"question\": \"テンション上がるね～！！連絡待ってるよ！！\"\n    }\n}\n\nexport default defaultDataset","import React from \"react\"\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from \"./components/index\"\nimport FormDialog from './components/forms/FormDialog';\nimport defaultDataset from \"./dataset\"\n\nexport default class App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      answers: [],\n      chats: [],\n      currentId: \"init\",\n      dataset: defaultDataset,\n      open: false\n    }\n    // 子コンポーネントで使用するためthisをbindする\n    this.selectAnswer = this.selectAnswer.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleClickOpen = this.handleClickOpen.bind(this)\n  }\n\n  displayNextQuestion = (nextQuestionId) => {\n    const chats = this.state.chats\n    chats.push ({\n      text: this.state.dataset[nextQuestionId].question,\n      type: \"question\"\n    })\n\n    this.setState({\n      answers: this.state.dataset[nextQuestionId].answers,\n      chats: chats,\n      currentId: nextQuestionId\n    })\n  } \n\n  selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch(true) {\n      case (nextQuestionId === 'init'):\n        setTimeout(() => this.displayNextQuestion(nextQuestionId, 500))\n        break;\n      case (/^https:*/.test(nextQuestionId)):\n        const a = document.createElement(\"a\")\n        a.href = nextQuestionId\n        a.target = \"_blank\"\n        a.click()\n        break;\n      case (nextQuestionId === \"contact\"):\n        this.handleClickOpen()\n        break;\n      default:\n        const chats = this.state.chats\n        chats.push({\n          text: selectedAnswer,\n          type: 'answer'\n        }) \n\n        this.setState({\n          chats: chats\n        })\n\n        setTimeout(() => this.displayNextQuestion(nextQuestionId), 1000); \n        break;\n    }\n  }\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    })\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  };\n\n  initAnswer = () => {\n    const initDataset = this.state.dataset[this.state.currentId]\n    const initAnswers = initDataset.answers\n    this.setState({\n      answers: initAnswers\n    })\n  }\n\n  initChats = () => {\n    const initDataset = this.state.dataset[this.state.currentId]\n    const chat = {\n      text: initDataset.question,\n      type: 'question'\n    }\n    const chats = this.state.chats\n    chats.push(chat)\n\n    this.setState({\n      chats: chats\n    })\n  }\n\n  componentDidMount () {\n    this.initChats()\n    this.initAnswer()\n  }\n  // useEffect ( () => {\n  //   this.initAnswer()\n  //   this.initChats()\n  //   }, [])\n\n  componentDidUpdate () {\n    const scrollArea = document.getElementById('scroll-area')\n    if (scrollArea) {\n      // scrollHeightは見えていない部分も含めた全体の高さ\n      scrollArea.scrollTop = scrollArea.scrollHeight\n    }\n  }\n\n    // useEffect ( () => {\n  //   const scrollArea = document.getElementById('scroll-area')\n  //   if (scrollArea) {\n  //     // scrollHeightは見えていない部分も含めた全体の高さ\n  //     scrollArea.scrollTop = scrollArea.scrollHeight\n  //   }\n  // })\n\n  render() {\n    return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList answers={this.state.answers} select={this.selectAnswer} />\n          <FormDialog open={this.state.open} handleClose={this.handleClose} handleClickOpen={this.handleClickOpen} />\n        </div>\n      </section>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}